version: '2'
services:
  pg:
    image: postgres:9.4
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  conjur:
    image: cyberark/conjur:1.9
    command: server -a dev -f /policy/initial_policy.yml
    environment:
      CONJUR_DATA_KEY: 'OyXV68Mip14xj33huGaQKewmmS+gKtDlp6ECZ2iATpU='
      DATABASE_URL: postgres://postgres@pg/postgres
      RAILS_ENV: development
    ports:
      - 80
    volumes:
      - ${PWD}/test/test_config:/policy:ro
    depends_on:
      - pg

  conjur-https:
    image: nginx:alpine
    ports:
      - 443
    volumes:
      - ${PWD}/test/test_config/https/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${PWD}/test/test_config/https/conjur.conf:/etc/nginx/sites-enabled/conjur.conf:ro
      - ${PWD}/test/test_config/https/dhparams.pem:/etc/nginx/dhparams.pem:ro
      - ${PWD}/test/test_config/https/conjur.crt:/cert/tls.crt:ro
      - ${PWD}/test/test_config/https/conjur.key:/cert/tls.key:ro
      - ${PWD}/test/test_config/https/ca.crt:/ca/tls.crt:ro
    depends_on:
      - conjur

  conjur-cli:
    image: cyberark/conjur-cli:5
    entrypoint: [ "bash", "-c" ]
    command: [ "sleep 999d" ]
    depends_on:
      - conjur
      - conjur-https

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    command: ['sleep', '999d']
    environment:
      CONJUR_AUTHN_API_KEY: Null
      TEST_ENV: "True"
    depends_on:
      - conjur
      - conjur-https
    volumes:
      - ${PWD}:/opt/conjur-api-python3
